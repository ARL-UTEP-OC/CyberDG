# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_test(self):
    self.driver.get("http://127.0.0.1:5000/")
    self.driver.set_window_size(1277, 709)
    self.driver.find_element(By.CSS_SELECTOR, ".col-2:nth-child(1) > .btn").click()
    self.driver.find_element(By.ID, "scenario_name").click()
    self.driver.find_element(By.ID, "scenario_name").send_keys("Test1")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Test Description")
    self.driver.find_element(By.ID, "createButton").click()
    self.driver.find_element(By.CSS_SELECTOR, ".text-center > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".text-center > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".fa-question-circle").click()
    self.vars["win3828"] = self.wait_for_window(2000)
    self.vars["root"] = self.driver.current_window_handle
    self.driver.switch_to.window(self.vars["win3828"])
    self.driver.find_element(By.CSS_SELECTOR, ".col-lg-11").click()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".overflow-auto > div:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".overflow-auto > div:nth-child(3)").click()
    self.driver.find_element(By.LINK_TEXT, "Test1").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-2:nth-child(2) > .btn").click()
    self.driver.find_element(By.ID, "uploadButton").click()
    self.driver.find_element(By.ID, "upload_name").click()
    self.driver.find_element(By.ID, "upload_name").click()
    self.driver.find_element(By.ID, "upload_name").send_keys("TestUPload")
    self.driver.find_element(By.ID, "upload_name").click()
    self.driver.find_element(By.ID, "upload_name").click()
    self.driver.find_element(By.ID, "upload_name").send_keys("TestUpload")
    self.driver.find_element(By.ID, "browserFile").click()
    self.driver.find_element(By.ID, "browserFile").send_keys("C:\\fakepath\\cubrebocas.jpg")
    self.driver.find_element(By.ID, "description").click()
    element = self.driver.find_element(By.ID, "description")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "description").send_keys("TestDescription")
    self.driver.find_element(By.ID, "uploadButton").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content #importButton").click()
    self.driver.find_element(By.CSS_SELECTOR, "#uploadForm span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content #importButton").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content #importButton")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "upload_name").click()
    self.driver.find_element(By.ID, "upload_name").send_keys("TestUpload")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("TestDescription")
    self.driver.find_element(By.ID, "browserFile").click()
    self.driver.find_element(By.ID, "browserFile").send_keys("C:\\fakepath\\myexample.py")
    self.driver.find_element(By.CSS_SELECTOR, "#uploadForm .card").click()
    self.driver.find_element(By.ID, "uploadButton").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa-file").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".fa-file")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-2:nth-child(2) > .btn").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-2:nth-child(2) > .btn")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#uploadForm .close").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-link").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content .close").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-2:nth-child(1) > .btn").click()
    self.driver.find_element(By.ID, "createButton").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa-arrow-left").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-2:nth-child(1) > .btn").click()
    self.driver.find_element(By.ID, "scenario_name").click()
    element = self.driver.find_element(By.ID, "scenario_name")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "scenario_name").send_keys("TestScenario")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("TestDescription")
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    self.driver.find_element(By.ID, "createButton").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.driver.find_element(By.LINK_TEXT, "TestScenario").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".text-center > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".far").click()
    self.driver.find_element(By.CSS_SELECTOR, ".far").click()
    self.driver.find_element(By.ID, "machine-name").click()
    self.driver.find_element(By.ID, "machine-name").click()
    element = self.driver.find_element(By.ID, "machine-name")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "machine-name").send_keys("TestMachine")
    self.driver.find_element(By.CSS_SELECTOR, ".form-row:nth-child(2) > .form-group").click()
    self.driver.find_element(By.CSS_SELECTOR, ".far").click()
    self.driver.find_element(By.NAME, "network_type").click()
    self.driver.find_element(By.ID, "command-line").click()
    self.driver.find_element(By.ID, "command-line").click()
    element = self.driver.find_element(By.ID, "command-line")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "command-line").click()
    self.driver.find_element(By.ID, "command-line").send_keys("none")
    self.driver.find_element(By.CSS_SELECTOR, ".far").click()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-dialog > .modal-content > .modal-footer > .btn:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa-arrow-right").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-success").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-secondary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(5)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-success").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(6)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(8)").click()
    self.driver.find_element(By.CSS_SELECTOR, "form > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, "form > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".modal-footer > .btn-secondary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row > .btn:nth-child(1)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".row > .btn:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#importForm span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row > .btn:nth-child(1)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".row > .btn:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#importForm span").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".fa-question-circle").click()
    self.vars["win9759"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win9759"])
    self.driver.switch_to.window(self.vars["win3828"])
    self.driver.switch_to.window(self.vars["root"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["win3828"])
    self.driver.switch_to.window(self.vars["win9759"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["win3828"])
    self.driver.find_element(By.LINK_TEXT, "New Scenario").click()
  
